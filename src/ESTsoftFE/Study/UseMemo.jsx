
// useMemo란 -> 리액트 훅에 있는 기능으로 16.8버전에 도입되었습니다.
// 메모이제이션을 사용하여 불필요한 재계산을 하지 않습니다.

// 메모이제이션이란? -> 동일한 계산을 반복할 때 이전에 계산 헀던 값을 메모리에 저장하여 동일한 계산의 반복 수행을 제거하여 프로그램 속도를 향상시켜줍니다.
// React.memo, useMemo, useCallback이 비슷한 내용이며

// React.memo는 HOC를 사용합니다. HOC란? -> 고차컴포넌트를 뜻하고 컴포넌트를 인자로 받아 새로운 컴포넌트를 다시 return해주는 함수입니다. 
// 주어진 컴포넌트가 동일한 props로 여러 번 렌더링될 때, 이전 렌더링의 결과를 메모이제이션하여 불필요한 렌더링을 방지합니다.

// useMemo -> 메모이제이션된 값을 반환하는 훅 동일한 계산을 반복해야 할 때, 이전에 계산한 값을 저장함으로써 불필요한 연산을 줄일수 있다. !특정 결과 값 재사용!

// useCallback -> 메모이제이션된 함수를 반환하는 훅입니다. 자식 컴포넌트 함수에 props로 전달할 때 사용됩니다. React.memo와 함께 사용할 때 좋습니다.

// React.memo  : 컴포넌트의 리렌더링을 최적화합니다. props가 변경되지 않으면 이전 렌더링 결과를 재사용합니다.
// useMemo     : 메모이제이션된 값을 반환합니다. 동일한 계산을 반복해야 할 때, 의존성 배열에 따라 이전 결과를 재사용합니다.
// useCallback : 메모이제이션된 함수를 반환합니다. 주로 함수가 자식 컴포넌트에 props로 전달될 때 사용됩니다.

export default function UseMemo () {

    return(
        <div>

        </div>
    );
}