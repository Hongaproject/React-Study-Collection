간단하게
Webpack, Babel, Polyfill

Webpack - JS, CSS, 이미지, 폰트 등 다양한 파일을 모듈 단위로 처리하고 이를 하나의 번들로 묶어 브라우저에서 효율적으로 실행될 수 있게 해줍니다.
Babel - 최신 JS문법을 구형 브라우저에서도 동작할 수 있게 도와주는 컴파일러 입니다.
Polyfill - 특정 기능을 지원하지 않을 때, 그 기능을 대신 구현하여 실행 가능하게 해주는 라이브러리입니다.

webpack 핵심 개념
- Entry (엔트리) : 모듈의 시작점입니다.
- Output (출력) : 모든 모듈을 하나로 합쳐서 저장하는 경로를 설정합니다.
- Loaders (로더) : 모듈의 소스 코드에 변경 사항을 적용하는 역할을 합니다. 자바스크립트 뿐만 아니라 다른 포멧의 파일도 처리할 수 있습니다.
- Plugins (플러그인) : 로더가 수행할 수 없는 다양한 기능을 수행합니다.

설치
npm install -D webpack webpack-cli 

entry, output, mode 이 세 가지 옵션은 번들링 시 필수적으로 설정해야합니다.

`npx webpack --help` 를 통해 위 옵션들의 쓰임에 대해 알아봅시다.

- `—-entry <value...>` : 모듈의 시작점을 설정합니다. webpack이 내부의 디펜던시 그래프를 생성하기 위해 사용해야 하는 모듈입니다. 엔트리 포인트가 직,간접적으로 의존하는 다른 모듈과 라이브러리를 찾아냅니다.
- `-o, --output-path <value>` : 웹팩으로 생성되는 파일의 위치를 설정합니다.
- `—-mode` : 번들링 모드를 결정합니다. development 모드와 production 모드가 있으며 production 모드의 경우 코드를 최적화하여 용량을 줄입니다.
