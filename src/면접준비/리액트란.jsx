// https://velog.io/@jini_eun/React-React.js%EB%9E%80-%EA%B0%84%EB%8B%A8-%EC%A0%95%EB%A6%AC#react%EB%9E%80 
// https://canoe726.tistory.com/23 

// 리액트란? 
// React - 사용자 인터페이스를 만들기위한 JS 라이브러리 이다. 

// 프레임워크와 라이브러리 - 간단한 예시 프레임워크는 틀이 다 짜여져있는 집, 라이브러리는 집에있는 가구를 뜻한다고 생각하면 편함. 
// 차이는 제어의 흐름을 누가 가지고있냐 이다 
// 프레임워크는 프레임워크가 제어의 흐름을 가지고있고 개발자는 그 안에 코드를 작성하면됨. 
// 라이브러리는 제어의 흐름을 개발자가 가지고 있고 필요한 상황마다 가져와서 사용이 가능하다. 

// 리액트 특징 
// Data Flow 
// 리액트는 한 방향으로만 흐르는 단방향 데이터 흐름을 가지고 있다. 

// component사용 
// 레고 블록처럼 작은 단위로 만들어서 조립하듯이 개발하는 방법 
// 컴포넌트가 쪼개어져 있기 때문에 전체 코드를 파악하기 쉬우며 유지보수가 좋고 재사용성이 좋습니다. 

// virtual DOM 
// 가상돔을 뜻하며 실제 DOM변화를 최소화 시켜주는 역할을 합니다. 가상돔을 안쓴다면 일일히 업데이트가 되며 그러면 속도가 느려지게 됩니다.
// state값이 20개가 있고 20개를 변경시킨다면 DOM을 20개를 업데이트 시켜야합니다. 하지만 가상돔을 사용하게 된다면 가상돔서 20번의 업데이트를 진행시키고
// DOM에는 1번의 업데이트가 진행이 되어 렌더링속도 및 효율성이 좋습니다.

// DOM
// 문서 객체 모델이며 HTML문서를 구조화 하여 나타낸 것
// DOM 구조에 접근할 수 있는 방법을 제공하여 그들이 문서 구조, 스타일, 내용 등을 변경할 수 있게 돕는다.

